// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/review-service.proto

package npool

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// request body and response
type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,100,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{0}
}

func (x *VersionResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type Review struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string `protobuf:"bytes,200,opt,name=ID,proto3" json:"ID,omitempty"`
	EntityType string `protobuf:"bytes,201,opt,name=EntityType,proto3" json:"EntityType,omitempty"`
	ReviewerID string `protobuf:"bytes,202,opt,name=ReviewerID,proto3" json:"ReviewerID,omitempty"`
	State      string `protobuf:"bytes,203,opt,name=State,proto3" json:"State,omitempty"`
	Message    string `protobuf:"bytes,204,opt,name=Message,proto3" json:"Message,omitempty"`
	ObjectID   string `protobuf:"bytes,205,opt,name=ObjectID,proto3" json:"ObjectID,omitempty"`
	Domain     string `protobuf:"bytes,206,opt,name=Domain,proto3" json:"Domain,omitempty"`
}

func (x *Review) Reset() {
	*x = Review{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Review) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Review) ProtoMessage() {}

func (x *Review) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Review.ProtoReflect.Descriptor instead.
func (*Review) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{1}
}

func (x *Review) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Review) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *Review) GetReviewerID() string {
	if x != nil {
		return x.ReviewerID
	}
	return ""
}

func (x *Review) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Review) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Review) GetObjectID() string {
	if x != nil {
		return x.ObjectID
	}
	return ""
}

func (x *Review) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type CreateReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Review `protobuf:"bytes,300,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateReviewRequest) Reset() {
	*x = CreateReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReviewRequest) ProtoMessage() {}

func (x *CreateReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReviewRequest.ProtoReflect.Descriptor instead.
func (*CreateReviewRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateReviewRequest) GetInfo() *Review {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Review `protobuf:"bytes,400,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateReviewResponse) Reset() {
	*x = CreateReviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReviewResponse) ProtoMessage() {}

func (x *CreateReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReviewResponse.ProtoReflect.Descriptor instead.
func (*CreateReviewResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateReviewResponse) GetInfo() *Review {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateReviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Review `protobuf:"bytes,500,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateReviewRequest) Reset() {
	*x = UpdateReviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReviewRequest) ProtoMessage() {}

func (x *UpdateReviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReviewRequest.ProtoReflect.Descriptor instead.
func (*UpdateReviewRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateReviewRequest) GetInfo() *Review {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateReviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *Review `protobuf:"bytes,600,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateReviewResponse) Reset() {
	*x = UpdateReviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReviewResponse) ProtoMessage() {}

func (x *UpdateReviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReviewResponse.ProtoReflect.Descriptor instead.
func (*UpdateReviewResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateReviewResponse) GetInfo() *Review {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetReviewsByDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,700,opt,name=Domain,proto3" json:"Domain,omitempty"`
}

func (x *GetReviewsByDomainRequest) Reset() {
	*x = GetReviewsByDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewsByDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewsByDomainRequest) ProtoMessage() {}

func (x *GetReviewsByDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewsByDomainRequest.ProtoReflect.Descriptor instead.
func (*GetReviewsByDomainRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetReviewsByDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type GetReviewsByDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Review `protobuf:"bytes,800,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetReviewsByDomainResponse) Reset() {
	*x = GetReviewsByDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewsByDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewsByDomainResponse) ProtoMessage() {}

func (x *GetReviewsByDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewsByDomainResponse.ProtoReflect.Descriptor instead.
func (*GetReviewsByDomainResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetReviewsByDomainResponse) GetInfos() []*Review {
	if x != nil {
		return x.Infos
	}
	return nil
}

type ReviewRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string `protobuf:"bytes,900,opt,name=ID,proto3" json:"ID,omitempty"`
	EntityType string `protobuf:"bytes,901,opt,name=EntityType,proto3" json:"EntityType,omitempty"`
	Domain     string `protobuf:"bytes,902,opt,name=Domain,proto3" json:"Domain,omitempty"`
	Rules      string `protobuf:"bytes,903,opt,name=Rules,proto3" json:"Rules,omitempty"`
}

func (x *ReviewRule) Reset() {
	*x = ReviewRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReviewRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReviewRule) ProtoMessage() {}

func (x *ReviewRule) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReviewRule.ProtoReflect.Descriptor instead.
func (*ReviewRule) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{8}
}

func (x *ReviewRule) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ReviewRule) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *ReviewRule) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ReviewRule) GetRules() string {
	if x != nil {
		return x.Rules
	}
	return ""
}

type CreateReviewRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ReviewRule `protobuf:"bytes,1000,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateReviewRuleRequest) Reset() {
	*x = CreateReviewRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReviewRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReviewRuleRequest) ProtoMessage() {}

func (x *CreateReviewRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReviewRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateReviewRuleRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{9}
}

func (x *CreateReviewRuleRequest) GetInfo() *ReviewRule {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateReviewRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ReviewRule `protobuf:"bytes,1100,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CreateReviewRuleResponse) Reset() {
	*x = CreateReviewRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReviewRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReviewRuleResponse) ProtoMessage() {}

func (x *CreateReviewRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReviewRuleResponse.ProtoReflect.Descriptor instead.
func (*CreateReviewRuleResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{10}
}

func (x *CreateReviewRuleResponse) GetInfo() *ReviewRule {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateReviewRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ReviewRule `protobuf:"bytes,1200,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateReviewRuleRequest) Reset() {
	*x = UpdateReviewRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReviewRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReviewRuleRequest) ProtoMessage() {}

func (x *UpdateReviewRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReviewRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateReviewRuleRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateReviewRuleRequest) GetInfo() *ReviewRule {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateReviewRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ReviewRule `protobuf:"bytes,1300,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateReviewRuleResponse) Reset() {
	*x = UpdateReviewRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReviewRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReviewRuleResponse) ProtoMessage() {}

func (x *UpdateReviewRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReviewRuleResponse.ProtoReflect.Descriptor instead.
func (*UpdateReviewRuleResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateReviewRuleResponse) GetInfo() *ReviewRule {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetReviewRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1400,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetReviewRuleRequest) Reset() {
	*x = GetReviewRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewRuleRequest) ProtoMessage() {}

func (x *GetReviewRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewRuleRequest.ProtoReflect.Descriptor instead.
func (*GetReviewRuleRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetReviewRuleRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetReviewRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *ReviewRule `protobuf:"bytes,1500,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetReviewRuleResponse) Reset() {
	*x = GetReviewRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewRuleResponse) ProtoMessage() {}

func (x *GetReviewRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewRuleResponse.ProtoReflect.Descriptor instead.
func (*GetReviewRuleResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetReviewRuleResponse) GetInfo() *ReviewRule {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetReviewRulesByDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1600,opt,name=Domain,proto3" json:"Domain,omitempty"`
}

func (x *GetReviewRulesByDomainRequest) Reset() {
	*x = GetReviewRulesByDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewRulesByDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewRulesByDomainRequest) ProtoMessage() {}

func (x *GetReviewRulesByDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewRulesByDomainRequest.ProtoReflect.Descriptor instead.
func (*GetReviewRulesByDomainRequest) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetReviewRulesByDomainRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type GetReviewRulesByDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*ReviewRule `protobuf:"bytes,1700,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetReviewRulesByDomainResponse) Reset() {
	*x = GetReviewRulesByDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_review_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReviewRulesByDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReviewRulesByDomainResponse) ProtoMessage() {}

func (x *GetReviewRulesByDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_review_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReviewRulesByDomainResponse.ProtoReflect.Descriptor instead.
func (*GetReviewRulesByDomainResponse) Descriptor() ([]byte, []int) {
	return file_npool_review_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetReviewRulesByDomainResponse) GetInfos() []*ReviewRule {
	if x != nil {
		return x.Infos
	}
	return nil
}

var File_npool_review_service_proto protoreflect.FileDescriptor

var file_npool_review_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x0f, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xc3, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0f, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1f, 0x0a,
	0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0xc9, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0a, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x49, 0x44, 0x18, 0xca, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x15, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0xcb, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0xcc, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0xcd, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x17,
	0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0xce, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x45, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x90,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x45, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xd8, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0xbc, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x4e, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0xa0, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x6e, 0x0a, 0x0a, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0f, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x84, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x0a, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x85, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x06, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x86, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x05, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x87, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x4d, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xe8,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4e, 0x0a, 0x18, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xcc,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4d, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0xb0, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4e, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x94, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x27, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0f, 0x0a, 0x02, 0x49, 0x44, 0x18, 0xf8, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x22, 0x4b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0xdc, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x38, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0xc0, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x56, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0xa4, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x32, 0xcb, 0x08, 0x0a, 0x0d, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0d, 0x22, 0x08, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12,
	0x7d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x26, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x3a, 0x01, 0x2a, 0x12, 0x7d,
	0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x26,
	0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x3a, 0x01, 0x2a, 0x12, 0x97, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2c, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2f, 0x62, 0x79, 0x2f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x8e, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x2a, 0x2e, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x2f, 0x72, 0x75, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x8e, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x2a, 0x2e,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x82, 0x01, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x27, 0x2e, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x9e,
	0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x30, 0x2e, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x79,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x42,
	0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70,
	0x6f, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_review_service_proto_rawDescOnce sync.Once
	file_npool_review_service_proto_rawDescData = file_npool_review_service_proto_rawDesc
)

func file_npool_review_service_proto_rawDescGZIP() []byte {
	file_npool_review_service_proto_rawDescOnce.Do(func() {
		file_npool_review_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_review_service_proto_rawDescData)
	})
	return file_npool_review_service_proto_rawDescData
}

var file_npool_review_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_npool_review_service_proto_goTypes = []interface{}{
	(*VersionResponse)(nil),                // 0: review.service.v1.VersionResponse
	(*Review)(nil),                         // 1: review.service.v1.Review
	(*CreateReviewRequest)(nil),            // 2: review.service.v1.CreateReviewRequest
	(*CreateReviewResponse)(nil),           // 3: review.service.v1.CreateReviewResponse
	(*UpdateReviewRequest)(nil),            // 4: review.service.v1.UpdateReviewRequest
	(*UpdateReviewResponse)(nil),           // 5: review.service.v1.UpdateReviewResponse
	(*GetReviewsByDomainRequest)(nil),      // 6: review.service.v1.GetReviewsByDomainRequest
	(*GetReviewsByDomainResponse)(nil),     // 7: review.service.v1.GetReviewsByDomainResponse
	(*ReviewRule)(nil),                     // 8: review.service.v1.ReviewRule
	(*CreateReviewRuleRequest)(nil),        // 9: review.service.v1.CreateReviewRuleRequest
	(*CreateReviewRuleResponse)(nil),       // 10: review.service.v1.CreateReviewRuleResponse
	(*UpdateReviewRuleRequest)(nil),        // 11: review.service.v1.UpdateReviewRuleRequest
	(*UpdateReviewRuleResponse)(nil),       // 12: review.service.v1.UpdateReviewRuleResponse
	(*GetReviewRuleRequest)(nil),           // 13: review.service.v1.GetReviewRuleRequest
	(*GetReviewRuleResponse)(nil),          // 14: review.service.v1.GetReviewRuleResponse
	(*GetReviewRulesByDomainRequest)(nil),  // 15: review.service.v1.GetReviewRulesByDomainRequest
	(*GetReviewRulesByDomainResponse)(nil), // 16: review.service.v1.GetReviewRulesByDomainResponse
	(*emptypb.Empty)(nil),                  // 17: google.protobuf.Empty
}
var file_npool_review_service_proto_depIdxs = []int32{
	1,  // 0: review.service.v1.CreateReviewRequest.Info:type_name -> review.service.v1.Review
	1,  // 1: review.service.v1.CreateReviewResponse.Info:type_name -> review.service.v1.Review
	1,  // 2: review.service.v1.UpdateReviewRequest.Info:type_name -> review.service.v1.Review
	1,  // 3: review.service.v1.UpdateReviewResponse.Info:type_name -> review.service.v1.Review
	1,  // 4: review.service.v1.GetReviewsByDomainResponse.Infos:type_name -> review.service.v1.Review
	8,  // 5: review.service.v1.CreateReviewRuleRequest.Info:type_name -> review.service.v1.ReviewRule
	8,  // 6: review.service.v1.CreateReviewRuleResponse.Info:type_name -> review.service.v1.ReviewRule
	8,  // 7: review.service.v1.UpdateReviewRuleRequest.Info:type_name -> review.service.v1.ReviewRule
	8,  // 8: review.service.v1.UpdateReviewRuleResponse.Info:type_name -> review.service.v1.ReviewRule
	8,  // 9: review.service.v1.GetReviewRuleResponse.Info:type_name -> review.service.v1.ReviewRule
	8,  // 10: review.service.v1.GetReviewRulesByDomainResponse.Infos:type_name -> review.service.v1.ReviewRule
	17, // 11: review.service.v1.ReviewService.Version:input_type -> google.protobuf.Empty
	2,  // 12: review.service.v1.ReviewService.CreateReview:input_type -> review.service.v1.CreateReviewRequest
	4,  // 13: review.service.v1.ReviewService.UpdateReview:input_type -> review.service.v1.UpdateReviewRequest
	6,  // 14: review.service.v1.ReviewService.GetReviewsByDomain:input_type -> review.service.v1.GetReviewsByDomainRequest
	9,  // 15: review.service.v1.ReviewService.CreateReviewRule:input_type -> review.service.v1.CreateReviewRuleRequest
	11, // 16: review.service.v1.ReviewService.UpdateReviewRule:input_type -> review.service.v1.UpdateReviewRuleRequest
	13, // 17: review.service.v1.ReviewService.GetReviewRule:input_type -> review.service.v1.GetReviewRuleRequest
	15, // 18: review.service.v1.ReviewService.GetReviewRulesByDomain:input_type -> review.service.v1.GetReviewRulesByDomainRequest
	0,  // 19: review.service.v1.ReviewService.Version:output_type -> review.service.v1.VersionResponse
	3,  // 20: review.service.v1.ReviewService.CreateReview:output_type -> review.service.v1.CreateReviewResponse
	5,  // 21: review.service.v1.ReviewService.UpdateReview:output_type -> review.service.v1.UpdateReviewResponse
	7,  // 22: review.service.v1.ReviewService.GetReviewsByDomain:output_type -> review.service.v1.GetReviewsByDomainResponse
	10, // 23: review.service.v1.ReviewService.CreateReviewRule:output_type -> review.service.v1.CreateReviewRuleResponse
	12, // 24: review.service.v1.ReviewService.UpdateReviewRule:output_type -> review.service.v1.UpdateReviewRuleResponse
	14, // 25: review.service.v1.ReviewService.GetReviewRule:output_type -> review.service.v1.GetReviewRuleResponse
	16, // 26: review.service.v1.ReviewService.GetReviewRulesByDomain:output_type -> review.service.v1.GetReviewRulesByDomainResponse
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_npool_review_service_proto_init() }
func file_npool_review_service_proto_init() {
	if File_npool_review_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_review_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Review); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewsByDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewsByDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReviewRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReviewRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReviewRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReviewRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReviewRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewRulesByDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_review_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReviewRulesByDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_review_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_review_service_proto_goTypes,
		DependencyIndexes: file_npool_review_service_proto_depIdxs,
		MessageInfos:      file_npool_review_service_proto_msgTypes,
	}.Build()
	File_npool_review_service_proto = out.File
	file_npool_review_service_proto_rawDesc = nil
	file_npool_review_service_proto_goTypes = nil
	file_npool_review_service_proto_depIdxs = nil
}
